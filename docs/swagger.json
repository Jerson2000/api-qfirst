{
    "swagger": "2.0",
    "info": {
        "description": "QFirst is a robust and easy-to-use booking system designed to help businesses manage appointments and reservations efficiently.",
        "title": "QFirst API Documentation",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user by verifying their email and password. On successful authentication, a JWT token will be generated for the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in to the platform.",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthLoginStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Add a new user to the platform. The request must include valid user data, including name, email, and password. The user will be created and saved in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Signing up to the platform.",
                "parameters": [
                    {
                        "description": "User data to sign up",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of bookings, with optional filtering by user ID, service ID, or status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Get a list of bookings.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "Booking Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Booking"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new booking for a user. The booking will be stored in the database, and the user will receive a confirmation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Create a new booking.",
                "parameters": [
                    {
                        "description": "Booking details",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service or User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a booking by its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Get a booking by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking found",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid Booking ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing booking by its ID. The booking details will be updated, and the changes will be saved to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Update an existing booking.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking details to update",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a booking from the platform using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Delete a booking by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Booking deleted successfully"
                    },
                    "400": {
                        "description": "Invalid Booking ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all available services in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get all services.",
                "responses": {
                    "200": {
                        "description": "List of services",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Services"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new service to the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create a new service.",
                "parameters": [
                    {
                        "description": "Service data",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Services"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Services"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a service's details by its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details",
                        "schema": {
                            "$ref": "#/definitions/models.Services"
                        }
                    },
                    "400": {
                        "description": "Invalid Service ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a service's details using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update an existing service.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service data",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Services"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Services"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a service from the system by its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete service by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Service ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new user to the platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a user's details by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently deletes a user by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AuthLoginStruct": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "enum.BookingStatus": {
            "type": "string",
            "enum": [
                "pending",
                "confirmed",
                "cancelled",
                "completed"
            ],
            "x-enum-varnames": [
                "Pending",
                "Confirmed",
                "Cancelled",
                "Completed"
            ]
        },
        "enum.PaymentStatus": {
            "type": "string",
            "enum": [
                "partial",
                "unpaid",
                "paid"
            ],
            "x-enum-varnames": [
                "Partial",
                "Unpaid",
                "Paid"
            ]
        },
        "enum.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "Admin",
                "User"
            ]
        },
        "models.Booking": {
            "description": "Represents a booking with associated user, service, start date, end date, total price, status, and payment status.",
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamp when the booking was created\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                },
                "end_date": {
                    "description": "The end date of the booking\n@example \"2025-04-15T17:00:00Z\"",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the booking, automatically incremented\n@example 1",
                    "type": "integer"
                },
                "payment_status": {
                    "description": "Payment status of the booking (e.g., unpaid, paid, etc.)\n@example \"unpaid\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.PaymentStatus"
                        }
                    ]
                },
                "service_id": {
                    "description": "ID of the associated service for the booking\n@example 1",
                    "type": "integer"
                },
                "start_date": {
                    "description": "The start date of the booking\n@example \"2025-04-15T09:00:00Z\"",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the booking (e.g., pending, confirmed, etc.)\n@example \"pending\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.BookingStatus"
                        }
                    ]
                },
                "total_price": {
                    "description": "Total price of the booking\n@example 250.75",
                    "type": "number"
                },
                "updated_at": {
                    "description": "Timestamp when the booking was last updated\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user making the booking\n@example \"123e4567-e89b-12d3-a456-426614174000\"",
                    "type": "string"
                }
            }
        },
        "models.Services": {
            "description": "Represents a service with name, description, price, and duration.",
            "type": "object",
            "properties": {
                "bookings": {
                    "description": "List of bookings related to this service\n@example [{ \"id\": 1, \"user_id\": 1, \"status\": \"confirmed\" }]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Booking"
                    }
                },
                "created_at": {
                    "description": "Timestamp when the service was created\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the service\n@example \"Comprehensive website design and development service.\"",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of the service, optional\n@example \"3 hours\"",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the service, automatically incremented\n@example 1",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the service\n@example \"Web Development\"",
                    "type": "string"
                },
                "price": {
                    "description": "Price of the service\n@example 199.99",
                    "type": "number"
                },
                "updated_at": {
                    "description": "Timestamp when the service was last updated\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                }
            }
        },
        "models.User": {
            "description": "User represents a user with details such as name, email, password, etc.",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address of the user, optional\n@example \"123 Main St, Springfield, IL\"",
                    "type": "string"
                },
                "age": {
                    "description": "Age of the user, optional\n@example 25",
                    "type": "integer"
                },
                "created_at": {
                    "description": "Timestamp when the user was created\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the user, unique\n@example \"johndoe@example.com\"",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender of the user, optional\n@example \"male\"",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the user, automatically generated\n@example 123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                },
                "is_verified": {
                    "description": "Whether the user's email has been verified\n@example false",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the user\n@example \"John Doe\"",
                    "type": "string"
                },
                "password": {
                    "description": "Password of the user\n@example \"password123\"",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number of the user, optional\n@example \"+1234567890\"",
                    "type": "string"
                },
                "role": {
                    "description": "Role of the user, default is 'user'\n@example \"admin\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.Role"
                        }
                    ]
                },
                "updated_at": {
                    "description": "Timestamp when the user was last updated\n@example \"2025-04-10T14:22:00Z\"",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and your JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "CsrfToken": {
            "description": "CSRF protection token.",
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header"
        }
    }
}